services:
  kafka:
    image: bitnami/kafka:3.6.0
    container_name: kafka
    ports:
      - "${KAFKA_PORT:-9094}:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Performance optimizations
      - KAFKA_CFG_NUM_NETWORK_THREADS=3
      - KAFKA_CFG_NUM_IO_THREADS=8
      - KAFKA_CFG_BACKGROUND_THREADS=10
      - KAFKA_CFG_QUEUED_MAX_REQUESTS=500
      - KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES=102400
      - KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES=102400
      - KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES=104857600
    volumes:
      - kafka-data:/bitnami/kafka
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  app:
    build: .
    container_name: book_crud_app
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      - kafka
      - postgres
    env_file:
      - .env
    restart: unless-stopped

volumes:
  kafka-data:
  postgres-data:
